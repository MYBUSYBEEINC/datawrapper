/*
 * CUSTOMIZE BULMA
 */

// ELEMENTS

// Box

.box.is-link { // add a custom link class to let to give box hover effects
  &:hover,
  &:focus {
    box-shadow: $box-link-hover-shadow
  }
  &:active {
    box-shadow: $box-link-active-shadow
  }
}

// Button

.button {
    font-weight: 500;
    
    &:not(.is-white, .is-light, .is-ghost, .is-text, .is-outlined, .is-inline) {
        &:before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            height: 100%;
            border-radius: $radius;
            box-shadow: $shadow-small;
        }
        &.is-small {
            border-radius: $radius-small;
        }
        &.is-circle {
            &:before {
                border-radius: 50%;
            }
        }
    }
    &.is-selected {
        background-color: $dw-shade-lighter;
    }
    &.is-text:disabled {
        color: inherit;
    }
    &.is-ghost:hover {
        background-color: $dw-shade-lighter;
    }
    &.is-outlined {
        background-color: transparent;
        &.is-dark {
            border-color: $dw-grey-light;
            &.is-selected {
                background-color: $dw-shade-light;
            }
        }
    }
    // is-selected styles, not a bulma default
    &.is-selected {
        background-color: $dw-grey-lightest;
    }

    // overrides for all colors
    @each $name, $pair in $button-colors {
        $color: nth($pair, 1);
        $color-invert: nth($pair, 2);

        &.is-#{$name} {
        
            &.is-selected {
                background-color: findDarkColor($color);
                &:hover,
                &.is-hovered {
                    background-color: bulmaDarken(findDarkColor($color),2.5%);
                }
                &.is-outlined {
                    background-color: bulmaDarken(findLightColor($color),2.5%);
                    &:hover,
                    &.is-hovered,
                    &:focus,
                    &.is-focused {
                        background-color: bulmaDarken(findLightColor($color),5%);
                    }
                }
            }
            &.is-outlined {
                &:hover,
                &.is-hovered,
                &:focus,
                &.is-focused {
                    background-color: transparent;
                    border-color: bulmaDarken($color,1);
                    color: bulmaDarken($color,2.5%);
                }
            }
        }

    }

    // is-inline styles, not a bulma default
    &.is-inline {
        padding: 0;
        margin: 0;
        height: auto;
        border: 0;
        background-color: transparent;
        // line-height: inherit;
        &:hover {
            background-color: transparent;
        }
        .icon {
            &:first-child:last-child {
                margin:0;
            }
            &:first-child:not(:last-child) {
                margin-left: 0;
                margin-right: .15em;
            }
            &:last-child:not(:first-child) {
                margin-left: .15em;
                margin-right: 0;
            }
        }
    }
    .icon {
        svg {
            font-size: 1.429em; // = 20px in 14px buttons
        }
        &:first-child:last-child {
            margin-left: calc(#{-0.5 * $button-padding-horizontal});
            margin-right: calc(#{-0.5 * $button-padding-horizontal});
        }
        &:first-child:not(:last-child) {
           margin-left: calc(#{-0.25 * $button-padding-horizontal} - #{$button-border-width});
           margin-right: .35em;
        }
        &:last-child:not(:first-child) {
            margin-left: .35em;
            margin-right: calc(#{-0.25 * $button-padding-horizontal} - #{$button-border-width});
        }
    }
}

// Button group
.buttons {
    &.has-addons {
        &:not(.are-outlined) {
            width: fit-content;
            border-radius: $radius;
            box-shadow: $shadow-small;
            &.are-small {
                border-radius: $radius-small;
            }
            .button {
                &::before {
                    display: none;
                }
                &:hover,
                &.is-hovered {
                    z-index: 4;
                }
            }
        }
        .button {
            margin-bottom: 0;
        }   
        .button,
        .control { // also set this for control because we can use .field.has-addons.buttons
            &:hover,
            &.is-hovered {
                z-index: 4;
            }
        }
    }
    &:last-child {
        margin-bottom: 0; // overwrite bulma default negative margin
    }
}

// COMPONENTS
// Message
.message {
    &.is-deletable {
        .message-body {
            position: relative;
            padding-right: 2.5em;
            & > .delete {
                position: absolute;
                right: 0.5rem;
                top: 0.5rem;
            }
        }
        .message-header + .message-body {
            padding: $message-body-padding;
        }
    }
    box-shadow: $shadow-border;
}

.modal {
    position: fixed;
    .modal-content {
        max-width: 1100px;
    }
}

// Dropdown
.dropdown {
    .dropdown-divider {
        margin: 0.25rem 0;
    }
    a.dropdown-item {
        margin: 0 0.25rem;
        width: auto;
    }
    a.dropdown-item:hover {
        color: $dw-scooter;
    }
    a.dropdown-item .icon {
        font-size: 18px;
        margin-right: 4px;
        color: $dw-scooter;
    }
}


// Tabs

.tabs {
    &.is-boxed {
       > ul {
            border-bottom: none;
            > li > a {
                margin-bottom: unset;
                border-bottom: 1px solid $dw-grey-light;
            }
            > li:not(.is-active) a {
                border-left: 0;
                border-right: 0;
                padding-left: calc(1em + 1px);
                padding-right: calc(1em + 1px);
            }
            &:after {
                content: '';
                flex-grow: 1;
                align-self: flex-end;
                border-bottom: 1px solid $dw-grey-light;
            }
        }
        &.is-centered > ul {
            &:before, &:after {
                content: '';
                flex-grow: 1;
                align-self: flex-end;
                border-bottom: 1px solid $dw-grey-light;
            }
        }
        &.is-right > ul {
            &:before {
                content: '';
                flex-grow: 1;
                align-self: flex-end;
                border-bottom: 1px solid $dw-grey-light;
            }
            &:after {
                display: none;
            }
        }
    }
    
    > ul > li > a {
        font-weight: 500;
    }
}

// FORMS
// Help

.help {
    line-height: 1.3;
    &.is-success { color: $success-text; }
    &.is-warning { color: $warning-text; }
}

// Radio & Checkbox
.checkbox, .radio {
    line-height: unset;
}

// Textarea
.textarea {
    line-height: 1.3;
}

// Select
.select:not(.is-fullwidth) {
    max-width: 14em;
}
// adjust bulma dropdowm arrow
.select:not(.is-multiple):not(.is-loading)::after,
.navbar-link:not(.is-arrowless)::after {
    border-width: 3px;
    border-radius: 1px;
} 


// Control
.control {
    font-size: 1em;
    // Icons
    &.has-icons-left,
    &.has-icons-right {
        .icon {
            color: $dw-grey;
            width: 2.5em !important; // bulma default
            height: 2.5em !important; // bulma default
        }
    }
    &.has-icons-left {
        .icon svg {
            font-size: 1.2em;
        }
    }
}

