{
  "version": 3,
  "file": "web-component.css",
  "sources": [
    "../Menu.svelte",
    "../Embed.svelte",
    "../Watermark.svelte",
    "../svgRule.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import BlocksRegion from './BlocksRegion.svelte';\n    import purifySvg from '@datawrapper/shared/purifySvg.js';\n\n    export let id;\n    export let name;\n    export let blocks;\n    export let props;\n\n    let open = false;\n\n    function toggle() {\n        open = !open;\n    }\n\n    function hide() {\n        open = false;\n    }\n</script>\n\n<style>\n    .menu {\n        cursor: pointer;\n\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        z-index: 1;\n    }\n\n    .ha-menu {\n        margin: 4px 10px 3px 3px;\n        width: 18px;\n        padding: 3px 0px;\n\n        border-top: 2px solid black;\n        border-bottom: 2px solid black;\n    }\n\n    .ha-menu div {\n        height: 2px;\n        width: 100%;\n        background: black;\n    }\n\n    .ha-menu:hover {\n        border-top-color: #ccc;\n        border-bottom-color: #ccc;\n    }\n\n    .ha-menu:hover div {\n        background: #ccc;\n    }\n\n    .menu-content {\n        position: absolute;\n        top: 30px;\n        right: 4px;\n        background: white;\n        border: 1px solid #ccc;\n        z-index: 100;\n        box-shadow: 0px 0px 4px 1px rgba(0, 0, 0, 0.1);\n    }\n\n    :global(.menu-content > .dw-chart-menu a) {\n        padding: 10px;\n        display: block;\n        color: initial;\n        border-bottom: 1px solid #ccc;\n    }\n\n    :global(.menu-content > .dw-chart-menu a:hover) {\n        background: rgba(0, 0, 0, 0.05);\n    }\n\n    :global(.menu-content > .dw-chart-menu .block:last-child a) {\n        border-bottom: none;\n    }\n</style>\n\n<svelte:window on:click={hide} />\n\n{#if blocks.length}\n    <div class:ha-menu={!props.icon} class=\"menu container\" on:click|stopPropagation={toggle}>\n        {#if props.icon}\n            {@html purifySvg(props.icon)}\n        {:else}\n            <div />\n        {/if}\n    </div>\n\n    <div class=\"menu-content container\" on:click|stopPropagation class:hidden={!open}>\n        <BlocksRegion {id} {name} {blocks} />\n    </div>\n{/if}\n",
    "<script>\n    import { clean } from '../shared.mjs';\n\n    // external props\n    export let props;\n    const { get, __ } = props;\n    $: ({ chart, theme, postEvent } = props);\n\n    // internal props\n    $: embed = get(theme, 'data.options.blocks.embed.data', {});\n    $: embedCode = get(\n        chart,\n        'metadata.publish.embed-codes.embed-method-responsive',\n        '<!-- embed code will be here after publishing -->'\n    );\n\n    let modalIsHidden = true;\n\n    function handleClick(e) {\n        e.preventDefault();\n        modalIsHidden = !modalIsHidden;\n        postEvent(`embed.modal.${modalIsHidden ? 'close' : 'open'}`);\n    }\n\n    let inputRef;\n\n    function copy() {\n        postEvent('embed.copy');\n        inputRef.focus();\n        inputRef.select();\n        document.execCommand('copy');\n    }\n</script>\n\n<style>\n    .embed-code {\n        position: absolute;\n        bottom: 35px;\n        left: 8px;\n        max-width: 350px;\n        border: 1px solid #e5e5e5;\n        background: #fff;\n        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.15);\n        border-radius: 4px;\n        padding: 15px 20px;\n        font-size: 14px;\n        z-index: 100;\n    }\n\n    .embed-code .close {\n        width: 15px;\n        height: 15px;\n        right: 10px;\n        top: 10px;\n        position: absolute;\n        fill: #4f4f4f;\n        cursor: pointer;\n    }\n    .embed-code .close:hover,\n    .embed-code .close:focus {\n        fill: #111;\n    }\n\n    .embed-code button {\n        cursor: pointer;\n        border: 1px solid #ccc;\n        border-bottom-color: #b3b3b3;\n        box-shadow: none;\n        border-radius: 4px;\n        width: 40px;\n        height: 30px;\n        box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.05), inset 0px 1px 0px rgba(255, 255, 255, 0.05);\n    }\n    .embed-code button:hover,\n    .embed-code button:active {\n        background-color: #e6e6e6;\n    }\n\n    .embed-code button svg {\n        width: 20px;\n        height: 20px;\n    }\n\n    .embed-code button path {\n        fill: #4f4f4f;\n    }\n\n    .embed-code p {\n        margin: 0px 0px 12px 0px;\n        width: calc(100% - 30px);\n        font-size: 14px;\n        line-height: 20px;\n    }\n\n    .embed-code div.actions {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    input {\n        width: 100%;\n        background: #f5f5f5;\n        border: 1px solid #dddddd;\n        box-sizing: border-box;\n        border-radius: 4px;\n        padding: 4px;\n        font-size: 14px;\n        line-height: 14px;\n        color: #4f4f4f;\n        margin-right: 10px;\n    }\n</style>\n\n<a href=\"#embed\" class=\"chart-action-embed\" on:click={handleClick}>\n    {embed.caption || __('Embed')}\n</a>\n{#if !modalIsHidden}\n    <div class=\"embed-code\">\n        <div class=\"close\" on:click={handleClick}>\n            <svg viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                    d=\"M7 4a.995.995 0 0 0-.707.293l-2 2a.999.999 0 0 0 0 1.414L11.586 15l-7.293\n                    7.293a.999.999 0 0 0 0 1.414l2 2a.999.999 0 0 0 1.414 0L15 18.414l7.293\n                    7.293a.999.999 0 0 0 1.414 0l2-2a.999.999 0 0 0 0-1.414L18.414\n                    15l7.293-7.293a.999.999 0 0 0 0-1.414l-2-2a.999.999 0 0 0-1.414 0L15 11.586\n                    7.707 4.293A.996.996 0 0 0 7 4z\"\n                />\n            </svg>\n        </div>\n        <p>\n            {@html clean(\n                embed.text || 'You can copy and paste this <b>code to embed</b> the visualization:'\n            )}\n        </p>\n\n        <div class=\"actions\">\n            <input bind:this={inputRef} type=\"text\" readonly value={embedCode} />\n            <button on:click={copy}>\n                <svg viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path\n                        d=\"M15 0c-1.645 0-3 1.355-3 3H8C6.346 3 5 4.346 5 6v17c0 1.654 1.346 3 3\n                        3h14c1.654 0 3-1.346 3-3V6c0-1.654-1.346-3-3-3h-4c0-1.645-1.355-3-3-3zm0\n                        2c.564 0 1 .436 1 1 0 .564-.436 1-1 1-.564 0-1-.436-1-1 0-.564.436-1 1-1zM8\n                        5h4v1a1 1 0 0 0 1 1h4a1 1 0 0 0 1-1V5h4c.551 0 1 .449 1 1v17c0 .551-.449 1-1\n                        1H8c-.551 0-1-.449-1-1V6c0-.551.449-1 1-1zm4 7a1 1 0 1 0 0 2 1 1 0 0 0\n                        0-2zm4 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm4 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm8 0a1\n                        1 0 1 0 0 2 1 1 0 0 0 0-2zm-16 4a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm16 0a1 1 0 1 0\n                        0 2 1 1 0 0 0 0-2zm-16 4a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm16 0a1 1 0 1 0 0 2 1 1\n                        0 0 0 0-2zm0 4a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-16 4a1 1 0 1 0 0 2 1 1 0 0 0\n                        0-2zm4 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm4 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm4 0a1\n                        1 0 1 0 0 2 1 1 0 0 0 0-2zm4 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"\n                    />\n                </svg>\n            </button>\n        </div>\n    </div>\n{/if}\n",
    "<script>\n    import estimateTextWidth from '@datawrapper/shared/estimateTextWidth';\n\n    export let props;\n    const { get, purifyHtml } = props;\n    $: ({ chart, theme } = props);\n\n    $: monospace = get(theme, 'data.options.watermark.monospace', false);\n    $: field = get(theme, 'data.options.watermark.custom-field');\n    $: text = get(theme, 'data.options.watermark')\n        ? field\n            ? get(chart, `metadata.custom.${field}`, '')\n            : get(theme, 'data.options.watermark.text', 'CONFIDENTIAL')\n        : false;\n\n    let width;\n    let height;\n\n    $: angle = -Math.atan(height / width);\n    $: angleDeg = (angle * 180) / Math.PI;\n\n    $: diagonal = Math.sqrt(width * width + height * height);\n\n    // estimateTextWidth works reasonable well for normal fonts\n    // set theme.data.options.watermark.monospace to true if you\n    // have a monospace font\n    $: estWidth = monospace ? text.length * 20 : estimateTextWidth(text, 20);\n    $: fontSize = `${Math.round(20 * ((diagonal * 0.75) / estWidth))}px`;\n</script>\n\n<style>\n    div {\n        position: fixed;\n        opacity: 0.182;\n        font-weight: 700;\n        font-size: 0;\n        white-space: nowrap;\n        left: -100px;\n        top: 0px;\n        right: -100px;\n        line-height: 100vh;\n        bottom: 0;\n        text-align: center;\n        pointer-events: none;\n        transform-origin: middle center;\n    }\n</style>\n\n<svelte:window bind:innerWidth={width} bind:innerHeight={height} />\n\n<div\n    class=\"watermark noscript\"\n    style=\"transform:rotate({angle}rad); font-size: {fontSize}\"\n    data-rotate={angleDeg}\n>\n    <span>\n        {@html purifyHtml(text)}\n    </span>\n</div>\n",
    "<script>\n    import { onMount } from 'svelte';\n    // external props\n    export let props;\n    const { get } = props;\n    let svg;\n    let length = 0;\n\n    onMount(() => {\n        length = svg.getBoundingClientRect().width;\n    });\n\n    if (typeof window !== 'undefined') {\n        window.addEventListener('resize', () => {\n            length = svg.getBoundingClientRect().width;\n        });\n    }\n\n    $: theme = props.theme;\n\n    $: data = get(theme, `data.options.blocks.${props.id}.data`, {});\n    $: margin = get(data, 'margin', '0px');\n    $: color = get(data, 'color', '#000000');\n    $: width = get(data, 'width', 1);\n    $: strokeDasharray = get(data, 'strokeDasharray', 'none');\n    $: strokeLinecap = get(data, 'strokeLinecap', 'butt');\n</script>\n\n<style type=\"text/css\">\n    svg {\n        width: 100%;\n\n        /*For IE*/\n        overflow-x: hidden;\n    }\n</style>\n\n<svg bind:this={svg} style=\"height:{Math.max(width, 1)}px; margin:{margin};\">\n    <line\n        style=\"stroke:{color}; stroke-width:{width}; stroke-dasharray:{strokeDasharray};\n        stroke-linecap: {strokeLinecap};\"\n        x1=\"0\"\n        y1={width / 2}\n        x2={length}\n        y2={width / 2}\n    />\n</svg>\n"
  ],
  "names": [],
  "mappings": "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"
}